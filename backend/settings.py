#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import urllib.parse as urlparse
import os
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent

# Register database schemes in URLs.

urlparse.uses_netloc.append('mysql')

# Quick - start development settings - unsuitable for production
# See https: //docs.djangoproject.com/en/3.1/howto/deployment/checklist/

#SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = '0z76^@c(s$1$a_tg_&po$z)-_lypr-v9gx_wn^5u!0n+!d2njz'

# SECURITY WARNING: don 't run with debug turned on in production!

DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django_mysql',
    'todo',
    'corsheaders',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [{
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [],
    'APP_DIRS': True,
    'OPTIONS': {
        'context_processors': ['django.template.context_processors.debug', 'django.template.context_processors.request',
            'django.contrib.auth.context_processors.auth',
            'django.contrib.messages.context_processors.messages'
        ]
    },
}]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https: //docs.djangoproject.com/en/3.1/ref/settings/#databases
DATABASES = {}

DATABASES['default'] = {
    'NAME': 'todolist',
    'USER': 'root',
    'PASSWORD': 'root',
    'HOST': '127.0.0.1',
    'PORT': '',
    'ENGINE': 'django.db.backends.mysql',
    'TEST': {
        'CHARSET': 'utf8mb4',
        'COLLATION': 'utf8mb4_unicode_ci',
    }
}

if 'DATABASE_URL' in os.environ:
    url = urlparse.urlparse(os.environ['DATABASE_URL'])

    # Ensure default database exists.

    DATABASES['default'] = DATABASES.get('default', {})

    # Update with environment configuration.

    DATABASES['default'].update({
        'NAME': url.path[1: ],
        'USER': url.username,
        'PASSWORD': url.password,
        'HOST': url.hostname,
        'PORT': url.port,
        'ENGINE': 'django.db.backends.mysql',
        'TEST': {
            'CHARSET': 'utf8mb4',
            'COLLATION': 'utf8mb4_unicode_ci',
        }
    })

DATABASES['default']['OPTIONS'] = {
    'autocommit': True,
    'charset': 'utf8mb4',
    'sql_mode': 'traditional',
    'init_command': "SET SESSION innodb_strict_mode=ON ,sql_mode='STRICT_TRANS_TABLES'"
}

# Password validation
# https: //docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = \
    [{'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'
     },
     {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'
     },
     {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'
     },
     {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'
    }]

# Internationalization
# https: //docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files(CSS, JavaScript, Images)
# https: //docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# we whitelist localhost: 3000 because that 's where frontend will be served

CORS_ORIGIN_WHITELIST = ('http://localhost:8000',
    'http://localhost:3000',
    'http://localhost:8080')